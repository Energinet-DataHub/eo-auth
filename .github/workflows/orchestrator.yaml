name: Orchestrator

on:
  push:
    {}

env:
  PYTHON_VERSION: 3.8
  
jobs:
  checkout:
    name: Checkout
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        
  install_dependencies:
    name: Install dependencies
    runs-on: ubuntu-latest
    steps:
      - name: Install dependencies
        uses: ./.github/actions/install-dependencies

  lint:
    name: Lint
    runs-on: ubuntu-latest
    needs: install_dependencies
    steps:
      - name: Run linting
        uses: ./.github/actions/lint
        with:
          python-version: ${{ env.PYTHON_VERSION }}

  unit_test:
    name: Unit test
    runs-on: ubuntu-latest
    needs: install_dependencies
    steps:
      - name: Run unit tests
        uses: ./.github/actions/unit-test
        with:
          python-version: ${{ env.PYTHON_VERSION }}

  integration_test:
    name: Integration test
    runs-on: ubuntu-latest
    needs: install_dependencies
    steps:
      - name: Run integration tests
        uses: ./.github/actions/integration-test
        with:
          python-version: ${{ env.PYTHON_VERSION }}

  build_and_push_container:
    name: Build and push container
    runs-on: ubuntu-latest
    needs: [lint, unit_test, integration_test]
    steps:
      - name: Build and push container
        uses: ./.github/actions/build-and-push-container

  update_release_chart:
    name: Update release chart
    runs-on: ubuntu-latest
    needs: build_and_push_container
    steps:
      - name: Update release chart
        uses: ./.github/actions/update-release-chart

  create_release:
    name: Create release
    runs-on: ubuntu-latest
    needs: update_release_chart
    steps:
      - name: Create release
        uses: ./.github/actions/create-release
  
  create_pull_request:
    name: Create base environment pull request
    runs-on: ubuntu-latest
    needs: create_release
    steps:
      - name: Create pull request
        uses: ./.github/actions/create-pull-request
