name: CI/CD

on:
  pull_request: {}
  push:
    branches:
      - main

concurrency: 
  group: ${{ github.ref }}
  cancel-in-progress: false

jobs:

  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Log in to the Container registry
      uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ github.token }}

    - name: Container image name
      id: image_name
      uses: ASzc/change-string-case-action@v2
      with:
        string: ghcr.io/${{ github.repository }}-api

    - name: Get tag
      id: tag
      shell: bash
      run: |
        if ${{github.event_name == 'push' && github.ref_name == 'main'}}
        then    
          echo "::set-output name=tag_name::$(grep 'version: ' chart/Chart.yaml | cut -f 2 -d ' ')"
        elif ${{github.event_name == 'pull_request'}}
        then
          echo "::set-output name=tag_name::pr-${{ github.event.pull_request.number }}-${{ github.run_number }}"
        else
          echo Not supported on push to branches other than main
          exit 1
        fi

    - name: Build and push Docker image
      uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
      with:
        context: .
        push: true
        tags: ${{ steps.image_name.outputs.lowercase }}:${{ steps.tag.outputs.tag_name }}


  py_validate:
    name: Validate python
    uses: Energinet-DataHub/.github/.github/workflows/python-pipenv-validate.yaml@helm_releases_action
    with:
      python_version: 3.8
      ignore_lint_error: true

  define_build:
    name: Define build matrix 
    runs-on: ubuntu-latest
    outputs:
      chart_version: ${{ steps.get_semver.outputs.semver }}
      containers: >-
        [
          { "deployment_name": "api", "dockerfile": "Dockerfile", "tag": "${{ steps.get_semver.outputs.semver }}" }
        ]
    steps:
      - name: Get chart version
        id: get_semver
        uses: Energinet-DataHub/.github/.github/actions/get-chart-semver@helm_releases_action
        with:
          chart_folder: chart

      - uses: actions/checkout@v2

      - name: Log in to the Container registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: .
          file: DockerfileTest
          push: true
          tags: ghcr.io/martinschmidt/eo-auth-api:0.1.6

  build_container_and_release_chart:
    name: Build containers
    needs: [define_build]
    uses: Energinet-DataHub/.github/.github/workflows/build-containers-and-release-chart.yaml@helm_releases_action
    with:
      helm_repository: ${{ github.repository_owner }}/helm-charts
      chart_folder: chart
      chart_version: ${{ needs.define_build.outputs.chart_version }}
      containers: ${{ needs.define_build.outputs.containers }}
    secrets:
      RELEASE_CHART_TOKEN: ${{ secrets.RELEASE_CHART_TOKEN }}

  update_environment:
    name: Update env
    needs: [build_container_and_release_chart]
    #only on: push to main OR PR on 'feature/**' branch
    if: github.event_name == 'push' && github.ref_name == 'main' || github.event_name == 'pull_request' && startsWith(github.event.pull_request.head.ref, 'feature/')
    uses: Energinet-DataHub/.github/.github/workflows/update-chart-in-env.yaml@helm_releases_action
    with:
      env_repository: ${{ github.repository_owner }}/eo-base-environment
      env_branch: ${{ github.event_name == 'push' && github.ref_name == 'main' || github.event.pull_request.head.ref }}
      helm_repository: ${{ github.repository_owner }}/helm-charts
      chart_name: ${{ needs.build_container_and_release_chart.outputs.chart_name }}
      chart_version: ${{ needs.build_container_and_release_chart.outputs.chart_version }}
    secrets:
      UPDATE_ENV_TOKEN: ${{ secrets.UPDATE_ENV_TOKEN }}
