# This Workflow does the following:
# 1. Create new Github Release
# 2. Build and Push Docker image to Dockerhub
# 3. Update Base Environment Repository
#   3.1 Replace old image tag with new one
#   3.2 Make new branch with commited chnages
#   3.3 Make pull request in the production branch

name: Create Release

env:
  # Url of the current job
  JOB_URL: "${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"

  ##### push_to_registry #####

  # Name of the docker image found on docker hub
  # TODO: RENAME to match new name
  DOCKER_IMAGE: projectorigin/auth

  ##### update_base_env #####

  # Helm chart path
  HELM_CHART_PATH:  "yggdrasil/applications/eo/eo-auth/eo-auth-service.yaml"

  # Base environment path "{OWNER}/{REPO_NAME}"
  BASE_ENV_REPO: "Energinet-DataHub/eo-base-environment"

  # Branch to make pull request to
  BASE_ENV_REPO_BRANCH: "development"

  # The name of the service being updated and shown in pull request
  SERVICE_NAME: auth-service

on:
  workflow_run:
    workflows: ["Lint and Test"]
    branches: [main]
    types:
      - completed

jobs:
  create_release:
    name: Create Release
    runs-on: ubuntu-latest
    outputs:
      release_tag: ${{ steps.build_and_push.outputs.RELEASE_VERSION }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}

      - name: Set up Python ${{ env.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ env.python-version }}

      - name: Install pipenv
        run: |
          python -m pip install --upgrade pipenv wheel

      - id: cache-pipenv
        uses: actions/cache@v1
        with:
          path: ~/.local/share/virtualenvs
          key: ${{ runner.os }}-pipenv-${{ hashFiles('**/Pipfile.lock') }}

      - name: Generate requirements.txt
        run: |
          pipenv lock -r > requirements.txt
      
      - name: Build and Push Docker image
        id: build_and_push
        uses: Energinet-DataHub/.github/.github/actions/docker-build-and-push@2.3.0
        with:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }} 
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
          DOCKER_IMAGE: godske/eo-auth
          MAJOR: 0
          MINOR: 0
          PATCH: ${{ github.run_number }}

      # Create new github release
      - uses: "marvinpinto/action-automatic-releases@919008cf3f741b179569b7a6fb4d8860689ab7f0"
        with:
          repo_token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
          automatic_release_tag: ${{ steps.build_and_push.outputs.RELEASE_VERSION }}
          prerelease: false
          draft: false
          title: Release ${{ steps.build_and_push.outputs.RELEASE_VERSION }}

  update_base_env:
    name: Update Base Environment
    runs-on: ubuntu-latest
    needs:
      - create_release
    steps:
      # Checkout the base envionment
      - uses: actions/checkout@v2
        with:
          token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
          repository: ${{ env.BASE_ENV_REPO }}
          ref: ${{ env.BASE_ENV_REPO_BRANCH }}
      
      - name: Replace docker tag
        uses: Energinet-DataHub/.github/.github/actions/regex-search-and-replace@731c5e2a1ec807416acc0d4dd3b244621e720bb7
        with:
          FILE_PATH: ${{ env.HELM_CHART_PATH }}
          NEW_VALUE: ${{ needs.create_release.outputs.release_tag }}
          REGEX_EXPRESSION: "^(?:.*tag: (.*))"

      # Create a new branch and a pullrequest in the base environment
      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v3
        with:
          token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
          title: Bump ${{ env.SERVICE_NAME }} to ${{ needs.create_release.outputs.release_tag }}
          commit-message: Bump ${{ env.SERVICE_NAME }} to ${{ needs.create_release.outputs.release_tag }}
          committer: GitHub <noreply@github.com>
          branch: "automated/github_actions/bump-${{ env.SERVICE_NAME }}-version-${{ needs.create_release.outputs.release_tag }}"
          labels: "automerge" # Indicates that pull requests may be auto merged
          body: |
            Bump ${{ env.SERVICE_NAME }} to ${{ needs.create_release.outputs.release_tag }}

            - Triggered by [Job][1] in [Repo][2]

            [1]: ${{ env.JOB_URL }} 
            [2]: ${{ github.server_url }}/${{ github.repository }}
